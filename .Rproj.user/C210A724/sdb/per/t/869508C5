{
    "contents" : "#Annual average PM2.5 averaged over the period 2008 through 2010\n#Do any counties exceed the standard of 12 Î¼g/m3?\n\npollution <- read.csv(\"data/avgpm25.csv\", colClasses = c(\"numeric\", \"character\",\"factor\", \"numeric\", \"numeric\"))\nhead(pollution)\n\n\n#Five Number Summary\n\nsummary(pollution$pm25)\n\n\n#Boxplot\n\nboxplot(pollution$pm25, col = \"blue\")\n\n#histogram\nhist(pollution$pm25 , col=\"green\")\nrug(pollution$pm25) #adds each point of the data below\n\nhist(pollution$pm25 , col=\"green\", breaks=100) #increasing the number of bars \n\n#sadding the standard line of 12\nboxplot(pollution$pm25, col = \"blue\")\nabline(h = 12)\n\n\n#Overlaying Features\n\nhist(pollution$pm25, col = \"green\")\nabline(v = 12, lwd = 2)\nabline(v = median(pollution$pm25), col = \"magenta\", lwd = 4)\n\n#barplot for categorical data\n\n#Barplot\nbarplot(table(pollution$region), col = \"wheat\", main = \"Number of Counties in Each Region\")\n\n\n#Multiple Boxplots\nboxplot(pm25 ~ region, data = pollution, col = \"red\") # plot a box plot by region\nabline(h = 12)\n\n#Multiple Histograms\npar(mfrow = c(2, 1), mar = c(4, 4, 2, 1))\nhist(subset(pollution, region == \"east\")$pm25, col = \"green\")\nhist(subset(pollution, region == \"west\")$pm25, col = \"green\")\n\n\n#Scatterplot\npar(mfrow = c(1, 1))\nwith(pollution, plot(latitude, pm25))\nabline(h = 12, lwd = 2, lty = 2)\nwith(pollution, plot(latitude, longitude))\n\n\n\n#Scatterplot - Using Color\nwith(pollution, plot(latitude, pm25, col = region))\nabline(h = 12, lwd = 2, lty = 2)\n\n\n#Multiple Scatterplots\n\npar(mfrow = c(1, 2), mar = c(5, 4, 2, 1))\nwith(subset(pollution, region == \"west\"), plot(latitude, pm25, main = \"West\"))\nwith(subset(pollution, region == \"east\"), plot(latitude, pm25, main = \"East\"))\n\n\n#plotting systems \nlibrary(datasets)\ndata(cars)\nwith(cars, plot(speed, dist))\n\n\n#Simple Base Graphics: Histogram\nlibrary(datasets)\nhist(airquality$Ozone)  ## Draw a new plot\nwith(airquality,plot(Wind,Ozone))\n\n\n#Lattice Plot\nlibrary(lattice)\nstate <- data.frame(state.x77, region = state.region)\nxyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))\n\n\n\n#ggplot2 Plot\nlibrary(ggplot2)\ndata(mpg)\nqplot(displ, hwy, data = mpg)\n\n\n#Simple Base Graphics: Boxplot\n\nlibrary(datasets)\nairquality <- transform(airquality, Month = factor(Month))\nboxplot(Ozone ~ Month, airquality, xlab = \"Month\", ylab = \"Ozone (ppb)\")\n\n# pch: the plotting symbol (default is open circle)\n# lty: the line type (default is solid line), can be dashed, dotted, etc.\n# lwd: the line width, specified as an integer multiple\n# col: the plotting color, specified as a number, string, or hex code; the colors() function gives you a vector of colors by name\n# xlab: character string for the x-axis label\n\n# ylab: character string for the y-axis label\n# las: the orientation of the axis labels on the plot\n# bg: the background color\n# mar: the margin size\n# oma: the outer margin size (default is 0 for all sides)\n# mfrow: number of plots per row, column (plots are filled row-wise)\n# mfcol: number of plots per row, column (plots are filled column-wise)\n\n\n#default setting\npar(\"lty\")\npar(\"col\")\npar(\"pch\")\n\n\n\n\n# plot: make a scatterplot, or other type of plot depending on the class of the object being plotted\n# \n# lines: add lines to a plot, given a vector x values and a corresponding vector of y values (or a 2-column matrix); this function just connects the dots\n# \n# points: add points to a plot\n# \n# text: add text labels to a plot using specified x, y coordinates\n# \n# title: add annotations to x, y axis labels, title, subtitle, outer margin\n# \n# mtext: add arbitrary text to the margins (inner or outer) of the plot\n# \n# axis: adding axis ticks/labels\n\n\n\n#Base Plot with Annotation\nlibrary(datasets)\nwith(airquality, plot(Wind, Ozone))\ntitle(main = \"Ozone and Wind in New York City\")  ## Add a title\n\n#adding to the main function\n\n#Base Plot with Annotation\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in New York City\"))\nwith(subset(airquality, Month == 5), points(Wind, Ozone, col = \"blue\")) #points help to color blue\n\n\n#Base Plot with Annotation\n\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in New York City\", \n                      type = \"n\"))\nwith(subset(airquality, Month == 5), points(Wind, Ozone, col = \"blue\"))\nwith(subset(airquality, Month != 5), points(Wind, Ozone, col = \"red\"))\nlegend(\"topright\", pch = 1, col = c(\"blue\", \"red\"), legend = c(\"May\", \"Other Months\"))\n\n\n\n#Base Plot with Regression Line\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in New York City\", \n                      pch = 20))\nmodel <- lm(Ozone ~ Wind, airquality)\nabline(model, lwd = 2)\n\n\n#Multiple Base Plots\npar(mfrow = c(1, 2))\nwith(airquality, {\n  plot(Wind, Ozone, main = \"Ozone and Wind\")\n  plot(Solar.R, Ozone, main = \"Ozone and Solar Radiation\")\n})\n\n\n#Multiple Base Plots\npar(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))# reduce the margins to be smaller than the default\n# reduce also the outer margin\nwith(airquality, {\n  plot(Wind, Ozone, main = \"Ozone and Wind\")\n  plot(Solar.R, Ozone, main = \"Ozone and Solar Radiation\")\n  plot(Temp, Ozone, main = \"Ozone and Temperature\")\n  mtext(\"Ozone and Weather in New York City\", outer = TRUE)\n})\n\n#important points\nexample(points)\n\n#write on a pdf graphic device\npdf(file = \"myplot.pdf\")  ## Open PDF device; create 'myplot.pdf' in my working directory\n## Create plot and send to a file (no plot appears on screen)\nwith(faithful, plot(eruptions, waiting))\ntitle(main = \"Old Faithful Geyser data\")  ## Annotate plot; still nothing on screen\ndev.off()  ## Close the PDF file device\n## Now you can view the file 'myplot.pdf' on your computer\n\nlibrary(datasets)\nwith(faithful, plot(eruptions, waiting))  ## Create plot on screen device\ntitle(main = \"Old Faithful Geyser data\")  ## Add a main title\ndev.copy(png, file = \"geyserplot.png\")  ## Copy my plot to a PNG file\ndev.off()  ## Don't forget to close the PNG device!\n\n",
    "created" : 1401905091081.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1877074386",
    "id" : "869508C5",
    "lastKnownWriteTime" : 1402121652,
    "path" : "E:/R_CLass/Data_Science_Spe/exploratory_data_analysis/codes_graphics/week1_introduction_to_graphs.R",
    "project_path" : "week1_introduction_to_graphs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}